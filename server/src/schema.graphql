type Query {
  info: String!
  users: [User!]! @listLength(min: 5, max: 25)
  submissions: [Submission!]!
}

type User {
  id: ID!
  name: String! @fake(type: firstName)
  surname: String! @fake(type: lastName)
  email: String! @fake(type:email)
  url: String!
  interests: [Interest!]!
  reviews: [Review!] @listLength(min: 0, max: 5)
}

type Interest {
  id: ID!
  text: String! @fake(type: words)
}

type ReviewComment {
  id: ID
  text: String @fake(type: lorem)
  viewable: Int @examples(values: [1, 0])
  submission_id: Int
  review_id: Int
}

type Review {
  id: ID!
  dateAssigned: String! @fake(type: pastDate)
  dateCompleted: String @examples(values: [null, null, null, null, 1550819997547, 999999999999 ])
  dateDue: String @fake(type: futureDate)
  declined: Int @examples(values:[0, 0, 0, 1])
  quality: Int @examples(values:[0, 1, 2, 3, 4, 5])
  recommendation: Int  @examples(values:[0, 1, 2, 3, 4])
  submission: Submission!
  reviewComments: [ReviewComment] @listLength(min: 0, max: 5)
}

type Keywords {
  submissionId: ID!
  keywords: String @fake(type: words)
}

type Submission {
  id: ID
  abstract: Abstract
  title: Title
  doi: Doi
  keywords: Keywords
  status: Int @examples(values:[0, 1, 2, 3, 4])
  hide_author: Int @examples(values:[0, 1])
}

type Title {
  text: String @fake(type: lorem, options: {loremSize: sentence})
  locale: String @fake(type: locale)
}


type Abstract {
  text: String @fake(type: lorem, options: {loremSize: paragraphs})
  locale: String @fake(type: locale)
}

type Doi {
  url: String @examples(values:["10.24251/HICSS.2019.560"])
}
